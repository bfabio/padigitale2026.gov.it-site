{"version":3,"file":"component---src-pages-note-legali-jsx-ae145a107e1e245ea189.js","mappings":"iMAMMA,GAAYC,EAAAA,EAAAA,IAAgB,CAChCC,WAAY,CACVC,QAAS,eACT,gBAAiB,CACfA,QAAS,YACT,4BAA6B,CAC3BC,cAAe,OACfC,OAAQ,YAGZ,uBAAwB,CACtBC,WAAY,MACZC,SAAU,OACV,WAAY,CACVD,WAAY,MACZC,SAAU,OACVC,MAAO,eAMFC,EAAa,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAClCC,EAAUZ,IAChB,OACE,uBAAKa,UAAS,cAAeF,EAAc,OAAS,SAClD,uBAAKE,UAAU,OACb,uBAAKA,UAAU,UACb,uBAAK,aAAYC,EAAAA,GAAAA,WAA6BD,UAAcD,EAAQV,WAAb,yBACrD,sBAAIW,UAAU,uCACZ,sBAAIA,UAAU,8BACZ,gBAAC,KAAD,CAAME,GAAG,KAAT,QACA,wBAAM,cAAY,OAAOF,UAAU,aAAnC,MAIF,sBAAI,eAAa,OAAOA,UAAU,0BAChC,yBAAIH,QAQnB,C,qEC/CKV,GAAYC,E,QAAAA,IAAgB,CAChCe,KAAM,CACJ,UAAW,CACTC,GAAI,CACFC,YAAa,QAEfC,GAAI,CACFC,aAAc,QAEhB,aAAc,CACZZ,MAAO,sBAMFa,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpBV,EAAUZ,IAEhB,OACE,uBAAKa,UAAU,+BACb,uBAAKA,UAAS,0BAA4BD,EAAQI,KAAQO,wBAAyB,CAAEC,OAAQF,KAGlG,C,wFCxBYG,EAAO,SAAC,GAQd,IAAD,IAPJC,QAAAA,OAOI,MAPM,GAON,MANJC,SAAAA,OAMI,SALJd,EAKI,EALJA,UAKI,IAJJe,iBAAAA,OAII,aAHJC,IAAAA,OAGI,MAHE,MAGF,EAFJC,EAEI,EAFJA,eACAC,EACI,EADJA,SAEMC,EAAcC,IAClB,OACA,CACE,aAA0B,YAAZP,EACd,kBAA+B,UAAZA,GAErBb,GAEIqB,EAAiBD,IAAW,YAAa,CAC7C,OAAQL,EACR,OAAQD,IAEV,OACE,uBAAKd,UAAWmB,GACd,gBAACH,EAAD,CAAKhB,UAAWqB,EAAgB,kBAAiBJ,GAC9CC,GAIR,C,uKCtBD,EAAyDI,EAAAA,GAA1CC,EAAf,EAAQC,MAA8BC,EAAtC,EAAyBC,YAUZC,EAAiB,WAC5B,IACqBC,GACjBC,EAAAA,EAAAA,IAXK,aAUPD,UAAanB,KAKf,OAHAqB,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAS,mBAAqBR,EAC/B,GAAE,IAED,gCACE,gBAACS,EAAA,EAAD,CAAKR,MAAOD,EAAUG,YAAaD,IACnC,gBAAC7B,EAAA,EAAD,CAAYC,YAAaoC,IACzB,gBAACrB,EAAA,EAAD,CAAMG,kBAAkB,GACtB,gBAACP,EAAA,EAAD,CAAWC,KAAMmB,KAIxB,EChCD,EADa,kBAAM,gBAACD,EAAD,KAAN,C","sources":["webpack://padigitale2026/./src/components/Breadcrumb.jsx","webpack://padigitale2026/./src/components/TextChunk.jsx","webpack://padigitale2026/./src/components/hero/Hero.jsx","webpack://padigitale2026/./src/layouts/NoteLegaliPage.jsx","webpack://padigitale2026/./src/pages/note-legali.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\nimport labels from '../../contents/labels.yml';\n\nconst useStyles = createUseStyles({\n  breadcrumb: {\n    padding: '1.563rem 0 0',\n    '& .breadcrumb': {\n      padding: '0.75rem 0',\n      '& .breadcrumb-item.active': {\n        pointerEvents: 'none',\n        cursor: 'default',\n      },\n    },\n    '& .breadcrumb-item a': {\n      fontWeight: '600',\n      fontSize: '18px',\n      '&.active': {\n        fontWeight: '400',\n        fontSize: '18px',\n        color: '#656566',\n      },\n    },\n  },\n});\n\nexport const Breadcrumb = ({ currentPage, noContainer }) => {\n  const classes = useStyles();\n  return (\n    <div className={`container ${noContainer ? 'px-0' : 'px-3'}`}>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <nav aria-label={labels.ariaLabel.breadcrumb} className={`${classes.breadcrumb} breadcrumb-container`}>\n            <ol className=\"breadcrumb justify-content-sm-start\">\n              <li className=\"breadcrumb-item d-sm-block\">\n                <Link to=\"/\">Home</Link>\n                <span aria-hidden=\"true\" className=\"separator\">\n                  /\n                </span>\n              </li>\n              <li aria-current=\"page\" className=\"breadcrumb-item active\">\n                <a>{currentPage}</a>\n              </li>\n            </ol>\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumb.propTypes = {\n  currentPage: PropTypes.string.isRequired,\n  noContainer: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  list: {\n    '@global': {\n      ul: {\n        paddingLeft: '24px',\n      },\n      li: {\n        marginBottom: '16px',\n      },\n      'li::marker': {\n        color: 'var(--primary)',\n      },\n    },\n  },\n});\n\nexport const TextChunk = ({ html }) => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"row align-items-center my-2\">\n      <div className={`col-12 col-lg-7 m-auto ${classes.list}`} dangerouslySetInnerHTML={{ __html: html }}></div>\n    </div>\n  );\n};\n\nTextChunk.propTypes = {\n  html: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Hero = ({\n  bgColor = '',\n  xPadding = true,\n  className,\n  yPaddingXLScreen = true,\n  Tag = 'div',\n  ariaLabelledBy,\n  children,\n}) => {\n  const heroClasses = classNames(\n    'py-5',\n    {\n      'bg-primary': bgColor === 'primary',\n      'lightgrey-bg-a2': bgColor === 'light',\n    },\n    className\n  );\n  const containerClass = classNames('container', {\n    'py-3': yPaddingXLScreen,\n    'px-3': xPadding,\n  });\n  return (\n    <div className={heroClasses}>\n      <Tag className={containerClass} aria-labelledby={ariaLabelledBy}>\n        {children}\n      </Tag>\n    </div>\n  );\n};\n\nHero.propTypes = {\n  bgColor: PropTypes.oneOf(['primary', 'light']),\n  xPadding: PropTypes.bool,\n  yPaddingXLScreen: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  ariaLabelledBy: PropTypes.string,\n  Tag: PropTypes.string,\n};\n","import React, { useEffect } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { announce } from '@react-aria/live-announcer';\nimport { Hero } from '../components/hero/Hero';\nimport { TextChunk } from '../components/TextChunk';\nimport { Breadcrumb } from '../components/Breadcrumb';\nimport content from '../../contents/note-legali-page/note-legali.yml';\nimport seo from '../../contents/seo.yml';\nimport { SEO } from '../components/SEO';\n\nconst { title: seoTitle, description: seoDescription } = seo.noteLegaliPage;\n\nconst query = graphql`\n  query {\n    textChunk: markdownRemark(fields: { slug: { eq: \"note-legali-page/note-legali\" } }) {\n      html\n    }\n  }\n`;\n\nexport const NoteLegaliPage = () => {\n  const {\n    textChunk: { html: textChunk },\n  } = useStaticQuery(query);\n  useEffect(() => {\n    announce('Pagina caricata ' + seoTitle);\n  }, []);\n  return (\n    <>\n      <SEO title={seoTitle} description={seoDescription} />\n      <Breadcrumb currentPage={content.breadcrumb} />\n      <Hero yPaddingXLScreen={false}>\n        <TextChunk html={textChunk} />\n      </Hero>\n    </>\n  );\n};\n","import React from 'react';\nimport { NoteLegaliPage } from '../layouts/NoteLegaliPage';\n\nconst Page = () => <NoteLegaliPage />;\nexport default Page;\n"],"names":["useStyles","createUseStyles","breadcrumb","padding","pointerEvents","cursor","fontWeight","fontSize","color","Breadcrumb","currentPage","noContainer","classes","className","labels","to","list","ul","paddingLeft","li","marginBottom","TextChunk","html","dangerouslySetInnerHTML","__html","Hero","bgColor","xPadding","yPaddingXLScreen","Tag","ariaLabelledBy","children","heroClasses","classNames","containerClass","seo","seoTitle","title","seoDescription","description","NoteLegaliPage","textChunk","useStaticQuery","useEffect","announce","SEO","content"],"sourceRoot":""}